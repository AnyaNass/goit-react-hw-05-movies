{"version":3,"file":"static/js/473.a88db50f.chunk.js","mappings":"0NAEaA,EAAQC,EAAAA,GAAAA,IAAH,sGAOLC,EAAUD,EAAAA,GAAAA,EAAH,4C,SCCpB,EANqB,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACvB,OAAO,UAACH,EAAD,YAAO,SAAC,MAAD,KACb,SAACE,EAAD,UAAUC,MAEX,C,4ECNYC,EAAS,WACrB,OAAO,SAAC,KAAD,CAAMC,MAAM,MAAMC,aAAc,CAAEC,eAAgB,WACzD,C,sDCJM,IAAMC,EAAa,SAACC,GAC1B,OAAIA,EACG,kCAAN,OAAyCA,GAErCA,OAAL,EACQ,uDAER,C,uICLYC,EAAS,mCAAG,WAAMC,GAAN,yFACDC,MAAM,sCAAD,OAAuCD,EAAvC,4BAHb,qCAES,cAClBE,EADkB,OAElBC,EAASD,EAASE,OAFA,kBAGjBD,GAHiB,2CAAH,sD,kBCATE,EAAaf,EAAAA,GAAAA,GAAH,4EAMVgB,EAAQhB,EAAAA,GAAAA,GAAH,0IAQLiB,EAAMjB,EAAAA,GAAAA,IAAH,mFAMHkB,EAAclB,EAAAA,GAAAA,IAAH,gEAKXmB,EAAYnB,EAAAA,GAAAA,EAAH,oG,oCC6BtB,EAhDe,WACd,OAA4BoB,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQhB,GAAOiB,EAAAA,EAAAA,MAAPjB,GAuBR,IArBAkB,EAAAA,EAAAA,YAAU,WAAM,wCAGf,6GAEyBnB,EAAUC,GAFnC,UAEQE,EAFR,OAGEU,EAAUV,EAASiB,MAEU,IAAzBjB,EAASiB,KAAKC,OALpB,sBAMS,IAAI/B,MANb,uDASEyB,GAAS,GATX,yBAWEE,GAAa,GAXf,6EAHe,sBACfA,GAAa,GADE,mCAkBff,EACA,GAAE,CAACD,IAECW,EAIL,OAAQ,iCACP,SAACN,EAAD,UACEM,EAAOU,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OAA2C,UAAClB,EAAD,YACtD,SAACC,EAAD,CAAKkB,KAAK5B,EAAAA,EAAAA,GAAW2B,GAAeE,IAAKJ,KACzC,UAACd,EAAD,YACC,wBAAKc,KACL,UAACb,EAAD,YAAW,0CAAyBc,GAAwB,yBAJKvB,EAAvD,MAQZe,IAAa,SAACtB,EAAA,EAAD,IACboB,IAAS,SAACc,EAAA,QAAD,CAAcnC,KAAK,qCAG9B,C","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","helpers/checkImage.jsx","servises/getActors.js","pages/Actors/Actors.styled.jsx","pages/Actors/Actors.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Error = styled.div`\n\tcolor: red;\n\ttext-align: center;\n\tfont-size: 75px;\n\tpadding: 30px 0;\n`\n\nexport const Message = styled.p`\n\tfont-size: 30px;\n`","import PropTypes from 'prop-types';\nimport { FaMeh } from 'react-icons/fa';\nimport { Error, Message } from './ErrorMessage.styled'\n\nconst ErrorMessage = ({ text }) => {\n\treturn <Error><FaMeh />\n\t\t<Message>{text}</Message>\n\t</Error>\n}\n\nexport default ErrorMessage\n\nErrorMessage.propTypes = {\n\ttext: PropTypes.string,\n}","import { Puff } from 'react-loader-spinner'\n\nexport const Loader = () => {\n\treturn <Puff color='red' wrapperStyle={{ justifyContent: \"center\" }} />\n}","export const checkImage = (img) => {\n\tif (img) {\n\t\treturn `https://image.tmdb.org/t/p/w500${img}`\n\t}\n\tif (!img) {\n\t\treturn \"https://scalar.usc.edu/works/guide/media/gradient.jpg\"\n\t}\n}\n","const API_KEY = '0b80d585dab8262100dc7063d058640e'\n\nexport const getActors = async id => {\n\tconst response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`)\n\tconst result = response.json();\n\treturn result;\n}\n\n\n","import styled from \"styled-components\";\n\nexport const ActorsList = styled.ul`\n\tdisplay: flex;\n\tgap: 24px;\n\tflex-wrap: wrap;\n`\n\nexport const Actor = styled.li`\n\twidth: 200px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\theight: 100%;\n`\n\nexport const Img = styled.img`\n\theight: 300px;\n\twidth: 200px;\n\tborder-radius: 15px;\n`\n\nexport const Description = styled.div`\n\tpadding: 8px;\n\ttext-align: center;\n`\n\nexport const Character = styled.p`\ntext-align: left;\nmargin: 8px 0 0;\n\n\tspan{\n\t\tfont-weight: 700;\n\t}\n`\n","import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { getActors } from \"servises/getActors\"\nimport { ActorsList, Actor, Img, Description, Character } from \"./Actors.styled\"\nimport { Loader } from \"components/Loader/Loader\"\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\"\nimport { checkImage } from '../../helpers/checkImage'\n\nconst Actors = () => {\n\tconst [actors, setActors] = useState();\n\tconst [error, setError] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst { id } = useParams();\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\n\t\tasync function fetch() {\n\t\t\ttry {\n\t\t\t\tconst response = await getActors(id);\n\t\t\t\tsetActors(response.cast)\n\n\t\t\t\tif (response.cast.length === 0) {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tsetError(true)\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t}\n\n\t\tfetch()\n\t}, [id])\n\n\tif (!actors) {\n\t\treturn;\n\t}\n\n\treturn (<>\n\t\t<ActorsList>\n\t\t\t{actors.map(({ id, name, character, profile_path }) => <Actor key={id} >\n\t\t\t\t<Img src={checkImage(profile_path)} alt={name} />\n\t\t\t\t<Description>\n\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t<Character><span>Character: </span>{character ? character : \"No information\"}</Character>\n\t\t\t\t</Description>\n\t\t\t</Actor>)}\n\t\t</ActorsList>\n\t\t{isLoading && <Loader />}\n\t\t{error && <ErrorMessage text=\"Sorry, there aren`t any actors\" />}\n\t</>\n\t)\n}\n\nexport default Actors"],"names":["Error","styled","Message","text","Loader","color","wrapperStyle","justifyContent","checkImage","img","getActors","id","fetch","response","result","json","ActorsList","Actor","Img","Description","Character","useState","actors","setActors","error","setError","isLoading","setIsLoading","useParams","useEffect","cast","length","map","name","character","profile_path","src","alt","ErrorMessage"],"sourceRoot":""}
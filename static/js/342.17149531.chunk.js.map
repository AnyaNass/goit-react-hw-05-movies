{"version":3,"file":"static/js/342.17149531.chunk.js","mappings":"0NAEaA,EAAQC,EAAAA,GAAAA,IAAH,sGAOLC,EAAUD,EAAAA,GAAAA,EAAH,4C,SCCpB,EANqB,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACvB,OAAO,UAACH,EAAD,YAAO,SAAC,MAAD,KACb,SAACE,EAAD,UAAUC,MAEX,C,4ECNYC,EAAS,WACrB,OAAO,SAAC,KAAD,CAAMC,MAAM,MAAMC,aAAc,CAAEC,eAAgB,WACzD,C,qICFYC,EAAU,mCAAG,WAAMC,GAAN,yFACFC,MAAM,sCAAD,OAAuCD,EAAvC,4BAHb,qCAEU,cACnBE,EADmB,OAEnBC,EAASD,EAASE,OAFC,kBAGlBD,GAHkB,2CAAH,sD,oCCAVE,EAAcb,EAAAA,GAAAA,GAAH,4BAGXc,EAAkBd,EAAAA,GAAAA,GAAH,0CAIfe,EAASf,EAAAA,GAAAA,GAAH,+FAONgB,EAAShB,EAAAA,GAAAA,EAAH,qG,SCqCnB,EA9CgB,WACf,OAA+BiB,EAAAA,EAAAA,YAA/B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQf,GAAOgB,EAAAA,EAAAA,MAAPhB,GAuBR,IArBAiB,EAAAA,EAAAA,YAAU,WAAM,wCAGf,6GAEyBlB,EAAWC,GAFpC,UAEQE,EAFR,OAGES,EAAYT,EAASgB,SAEW,IAA5BhB,EAASgB,QAAQC,OALvB,sBAMS,IAAI5B,MANb,uDASEsB,GAAS,GATX,yBAWEE,GAAa,GAXf,6EAHe,sBACfA,GAAa,GADE,mCAkBfd,EACA,GAAE,CAACD,IAECU,EAIL,OACC,iCACC,SAACL,EAAD,UACEK,EAAQU,KAAI,SAAAC,GAAM,OAAI,UAACf,EAAD,YACtB,UAACC,EAAD,YAAQ,qCAAoBc,EAAOC,WACnC,UAACd,EAAD,YAAQ,sCAAR,IAA8Ba,EAAOE,aAFOF,EAAOrB,GAAjC,MAKnBc,IAAa,SAACnB,EAAA,EAAD,IACbiB,IAAS,SAACY,EAAA,QAAD,CAAc9B,KAAK,sCAG/B,C,sBCnDD,SAAS+B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOtB,GAEP,YADAgB,EAAOhB,EAET,CAEIqB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","servises/getReviews.js","components/Reviews/Review.styled.jsx","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Error = styled.div`\n\tcolor: red;\n\ttext-align: center;\n\tfont-size: 75px;\n\tpadding: 30px 0;\n`\n\nexport const Message = styled.p`\n\tfont-size: 30px;\n`","import PropTypes from 'prop-types';\nimport { FaMeh } from 'react-icons/fa';\nimport { Error, Message } from './ErrorMessage.styled'\n\nconst ErrorMessage = ({ text }) => {\n\treturn <Error><FaMeh />\n\t\t<Message>{text}</Message>\n\t</Error>\n}\n\nexport default ErrorMessage\n\nErrorMessage.propTypes = {\n\ttext: PropTypes.string,\n}","import { Puff } from 'react-loader-spinner'\n\nexport const Loader = () => {\n\treturn <Puff color='red' wrapperStyle={{ justifyContent: \"center\" }} />\n}","const API_KEY = '0b80d585dab8262100dc7063d058640e'\n\nexport const getReviews = async id => {\n\tconst response = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`)\n\tconst result = response.json();\n\treturn result;\n}","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n\t\n`\nexport const ReviewsListItem = styled.li`\n\tpadding: 12px;\n`\n\nexport const Author = styled.h2`\nfont-size: 18px;\n\tspan{\n\t\tcolor: red;\n\t\tfont-size: 22px;\n\t}\n`\nexport const Review = styled.p`\nmargin: 8px 0 0;\n\tspan{\n\t\tfont-weight: 700;\n\t\tfont-size: 18px;\n\t}\n`","import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { getReviews } from \"servises/getReviews\"\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { ReviewsList, ReviewsListItem, Author, Review } from './Review.styled'\n\nconst Reviews = () => {\n\tconst [reviews, setReviewss] = useState();\n\tconst [error, setError] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst { id } = useParams();\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\n\t\tasync function fetch() {\n\t\t\ttry {\n\t\t\t\tconst response = await getReviews(id);\n\t\t\t\tsetReviewss(response.results)\n\n\t\t\t\tif (response.results.length === 0) {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tsetError(true)\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t}\n\n\t\tfetch()\n\t}, [id])\n\n\tif (!reviews) {\n\t\treturn;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ReviewsList>\n\t\t\t\t{reviews.map(review => <ReviewsListItem key={review.id} >\n\t\t\t\t\t<Author><span>Name: </span>{review.author}</Author>\n\t\t\t\t\t<Review><span>Review:</span> {review.content}</Review>\n\t\t\t\t</ReviewsListItem>)}\n\t\t\t</ReviewsList>\n\t\t\t{isLoading && <Loader />}\n\t\t\t{error && <ErrorMessage text=\"Sorry, there aren`t any reviews\" />}\n\t\t</>\n\t)\n}\n\nexport default Reviews","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Error","styled","Message","text","Loader","color","wrapperStyle","justifyContent","getReviews","id","fetch","response","result","json","ReviewsList","ReviewsListItem","Author","Review","useState","reviews","setReviewss","error","setError","isLoading","setIsLoading","useParams","useEffect","results","length","map","review","author","content","ErrorMessage","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}